* Programming Langranges
** Python
*** Follow edx course MIT 6.002 [3/6]
**** DONE 1st week
    CLOSED: [2015-06-24 Wed 22:54] SCHEDULED: <2015-06-13 Sat>

**** DONE problem set 1
    CLOSED: [2015-06-25 Thu 21:30]

**** DONE problem set 2
    CLOSED: [2015-07-01 Wed 08:47] SCHEDULED: <2015-06-28 Sun>

**** TODO problem set 3

**** TODO problem set 4

**** TODO problem set 5
*** Learn python the hard way

*** Recursion

**** Divide and conquer

*** mutable & immutable objects
** Cpp
*** Data Types
**** The differences in the representation of positive & negative integers
原码和补码（原码各位取反加1)
**** representation of floating numbers, note its "precision"
***** 避免很大的数和很小的数直接相加减
*** Operators
**** 赋值
***** 两边类型不同时的类型转换
***** 长数赋短数
***** 短数赋长数
***** 符号位的赋值处理
**** 算术运算符
**** 自加减 
*++* 只能用于变量，不能用于表达式
**** 关系运算符
**** 逻辑运算符
***** 逻辑运算的取舍
****** 逻辑表达式求解时，并不总是执行所有运算
***** 逻辑运算符两侧可以是任何类型
**** 逗号，条件，强制类型转换
**** 位运算
note that for *xor* operator *^*, we have 0^0=0, 1^1=1.
***** 左移 <<，右移 >>
***** 异或运算
****** 交换两个值而不使用临时变量
**** 优先级
算术运算符 > 关系运算符 > 赋值运算符
逻辑非 > 算术运算符 > 关系运算符 > && > || > 赋值运算符
***** 剪刀法
*** DONE Array
CLOSED: [2016-03-06 Sun 16:07] SCHEDULED: <2016-03-04 Fri>
**** initialization
**** 2-dim array
**** 数组下标的运用
***** sieve method application
*** DONE string & vector class 
CLOSED: [2016-03-08 Tue 20:05]
** R
*** Finish the Hard Function problems
*** TODO study dplyr package for SAC(split-apply-combine) procedure
*** TODO study ggplot2
** SAS
*** DONE Level up to write some easy sas programs
   CLOSED: [2014-10-07 Tue 10:49]
*** TODO Improve SAS skill via the IPD NMA case study[1/4]
**** TODO data manipulation, SQL
SCHEDULED: <2016-02-15 Mon>
**** DONE GLM, logistic & poisson regression procedure in SAS
CLOSED: [2016-01-18 Mon 17:18]
**** TODO write macros intro
SCHEDULED: <2016-02-15 Mon>
**** TODO accumulate and summary SAS tricks you learn

** Lisp
*** Scheme
** Markdown
*** DONE Learn basics
   CLOSED: [2015-02-17 Tue 10:10]
*** TODO gmail via markdown
** Clojure
*** install via Leiningen
Once it’s installed you can start a REPL with:
*lein repl*
* Algorithm & Data Structure
** Cracking the code interview
*** TODO 1st discussion
** TODO Leetcode
*** array
*** linked list
*** divide and conquer
*** math
*** dynamic programming
*** pointer
** TODO Implement the important/fun algorithms you encountered by yourself via C++ or Python
*** linked list
*** stack & queue
*** binary search tree
*** dictionary
*** priority queue
*** graph via adjacent matrix or adjacent linked list
** Questions
*** what is the "unit time" in this particular algorithm problem?
* Software Architecture & Design
** SICP
*** TODO MIT Lecture Videos
:PROPERTIES:
:LAST_REPEAT: [2016-03-19 Sat 14:16]
:END:
- State "DONE"       from "TODO"       [2016-03-19 Sat 14:16]
- State "DONE"       from "TODO"       [2016-03-06 Sun 16:45]
- State "DONE"       from "TODO"       [2016-02-29 Mon 00:53]
- State "DONE"       from "TODO"       [2016-02-22 Mon 10:18]
*** Questions
**** Ch2
***** how to subset a list? construct your own procedure
*** Problems
* Data Science
** Kaggle Projects
*** check out some of the tutorials there! [/]
**** TODO deep learning
*** warm-up
**** TODO Digit Recognizer
**** Facial Keypoints Detection
**** SF crime classification
*** featured
**** 2nd Annual Data Science Bowl
**** May 2015 Reddit comments
**** Predicting 2016 NCAA
* Thoughts
** Tools/Skills/Knowledge worth achieving expertise for programming in 10 years
*** Emacs & Vim
*** Git & Github
*** CMD(Bash, Win, etc)
*** Lisp & Scheme
*** C & C++
*** Python & R
*** Algorithm & Data Structure
*** Different Paradigms of Programming
*** Org Mode & Notes Keeping/Project Managing/Time Tracking/Self Evaluation
*** Reproducible Research(Org, Latex, Texmacs, Knitr integration)
*** Web, Server related tools & language
